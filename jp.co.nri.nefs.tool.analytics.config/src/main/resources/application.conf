akka = {
  log-config-on-start = on
  actor = {
    mailbox.requirements = {
      "akka.dispatch.BoundedMessageQueueSemantics" = bounded-mailbox
    }
    debug {
      receive = on
      lifecycle = on
    }
    deployment {
      /fileSender/lineSender {
        router = round-robin-pool
        nr-of-instances = 2
      }
    }
  }

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

bounded-mailbox = {
  mailbox-type = "akka.dispatch.BoundedMailbox"
  mailbox-capacity = 10
  mailbox-push-timeout-time = 10.minutes
}

blocking-io-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  therad-pool-executor = {
    fixed-pool-size = 2
  }
  throughput = 1
}

slick = {
  dbs = {
    default = {
      profile = "slick.jdbc.MySQLProfile$"
      db = {
        driver = "com.mysql.cj.jdbc.Driver",
        //url = "jdbc:mysql://localhost/analysis?serverTimezone=UTC&useSSL=false",
        url = "jdbc:mysql://localhost/analysis?serverTimezone=JST",
        user = "satoshi",
        password = "satoshi123",
        connectionPool = HikariCP
        keepAliveConnection = true
        maxConnections = 20
        minConnections = 10
        maxThreads = 20
        minThreads = 20
        queueSize = 1000
        properties = {
          autoCommit = true
        }
      }
      dateToChar = {
        function = "DATE_FORMAT"
        hourMinutesFormat = "%H%i"
      }
      dateFormatters = [
        {"yy/MM/dd HH:mm" : "%y/%m/%d %H:%i"},
        {"yy/MM/dd HH" : "%y/%m/%d %H"},
        {"yy/MM/dd" : "%y/%m/%d"},
        {"yy/MM" : "%y/%m"}
      ]
    }
    h2mem1 = {
      profile = "slick.jdbc.H2Profile$"
      db = {
        driver = "org.h2.Driver"
        url = "jdbc:h2:mem:play"
        connectionPool = disabled
        keepAliveConnection = true
        user = "sa"
        password = ""
      }
    }
  }
}

play-analytics {
  log-dir = "D:/tmp/targetlog"
  log-dir = ${?SEARCHDIR}
}

user-store {
  static-data-dir = "jp.co.nri.nefs.tool.analytics.model.common/staticData"
}

client-log-collector {
  is-zip = true
  search-dir = "W:/ASKA/OMS/OMS/+DevelopmentEvnvironment/DEV-G1/USER/L1Support/Transfer"
  search-dir = ${?RAWDIR}
  out-dir = "D:/tmp/targetlog"
  out-dir = ${?SEARCHDIR}
  target-dir-regex = ".*"
}

client-log-sender {
  input-dir = "C:/Users/user/IdeaProjects/analysis/jp.co.nri.nefs.tool.analytics.store.client/logFiles"
  input-dir = ${?SEARCHDIR}
  is-recreate = false
  wait-time-until-all-files-execution = 240 minutes
  wait-time-until-single-file-execution = 5 minutes
}

client-log-classifier {
  e9n-reason-acceptable-number = 5
}

analyze-client {
  start-time-hour = 5
  start-time-minute = 0
  end-time-hour = 17
  end-time-minute = 0
  interval-minute = 10
  update-window-slice-sliding-scale = 500
}

util {
  holiday-list = [
    "20200921"
    "20200922"
    "20201103"
    "20201123"
    "20210101"
    "20210102"
    "20210103"
    "20210111"
    "20210211"
    "20210223"
    "20210320"
    "20210429"
    "20210503"
    "20210504"
    "20210505"
    "20210722"
    "20210723"
    "20210808"
    "20210809"
    "20210920"
    "20210923"
    "2021103"
    "2021123"
  ]
}

outDir = "C:/Users/user/IdeaProjects/analysis/jp.co.nri.nefs.tool.analytics.store/outDir"
staticDataDir = "C:/Users/user/IdeaProjects/analysis/jp.co.nri.nefs.tool.analytics.model.common/staticData"
zipCommand = ""

