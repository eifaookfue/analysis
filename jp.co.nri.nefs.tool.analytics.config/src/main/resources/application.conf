akka = {
  log-config-on-start = on
  actor = {
    mailbox.requirements = {
      "akka.dispatch.BoundedMessageQueueSemantics" = bounded-mailbox
    }
    debug {
      receive = on
      lifecycle = on
    }
    deployment {
      /fileSender/lineSender {
        router = round-robin-pool
        nr-of-instances = 2
      }
    }
  }

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

bounded-mailbox = {
  mailbox-type = "akka.dispatch.BoundedMailbox"
  mailbox-capacity = 10
  mailbox-push-timeout-time = 10.minutes
}

slick = {
  dbs = {
    default = {
      profile = "slick.jdbc.MySQLProfile$"
      db = {
        driver = "com.mysql.cj.jdbc.Driver",
        //url = "jdbc:mysql://localhost/analysis?serverTimezone=UTC&useSSL=false",
        url = "jdbc:mysql://localhost/analysis?serverTimezone=UTC",
        user = "satoshi",
        password = "satoshi123",
        connectionPool = HikariCP
        keepAliveConnection = true
        maxConnections = 20
        minConnections = 10
        maxThreads = 20
        minThreads = 20
        queueSize = 1000
        properties = {
          autoCommit = true
        }
      }
      dateToChar = {
        function = "DATE_FORMAT"
        format = "%H%i"
      }
    }
    h2mem1 = {
      profile = "slick.jdbc.H2Profile$"
      db = {
        driver = "org.h2.Driver"
        url = "jdbc:h2:mem:play"
        connectionPool = disabled
        keepAliveConnection = true
        user = "sa"
        password = ""
      }
    }
  }
}

inputDir = "C:/Users/user/IdeaProjects/analysis/jp.co.nri.nefs.tool.analytics.store.client/logFiles"
outDir = "C:/Users/user/IdeaProjects/analysis/jp.co.nri.nefs.tool.analytics.store/outDir"
staticDataDir = "C:/Users/user/IdeaProjects/analysis/jp.co.nri.nefs.tool.analytics.store/staticData"
zipCommand = ""

serviceNames = ["OMS", "ELP"]
levels = ["ERROR", "WARN", "INFO", "DEBUG"]
applications = ["TradeSheet", "MonitorSheet", "BasketSheet", "IOISheet"]

HandlerMapping {
  NewSplitDialog: ["NewSplitHandler", "IconHandler"]
  SmartSplitDialog: ["SmartSplitHandler"]
  QuestionDialog: ["CompleteOrderHandler"]
}

WindowMapping {
  NewSplitDialog: ["SmartSplitDialog"]
  SelectMultiDialog: []
}